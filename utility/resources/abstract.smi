predicates:

  abstr_deg : ARG0 i.
  addressee : ARG0 i, ARG1 u, ARG2 u.
  all+too : ARG0 e, ARG1 u, ARG2 u.
  appos : ARG0 e, ARG1 x, ARG2 u.
  appos : ARG0 e, ARG1 x { NUM pl }, ARG2 x.
  approx_grad : ARG0 i, ARG1 i { NUM sg }.
  approx_grad : ARG0 i, ARG1 i.
  be_v_id : ARG0 i, ARG1 u, ARG2 u.
  be_v_nv : ARG0 i, ARG1 u, ARG2 u.
  card : ARG0 i, ARG1 i.
  card : ARG0 i, ARG1 x { NUM pl, IND + }.
  card : ARG0 e, ARG1 i { NUM pl }.
  card : ARG0 i, ARG1 i { NUM sg }.
  comp : ARG0 e, [ ARG1 u ], [ ARG2 u ].
  comp : ARG0 i, ARG1 u.
  comp_enough : ARG0 e, ARG1 u, ARG2 u.
  comp_equal : ARG0 e, ARG1 u, ARG2 u.
  comp_less : ARG0 e, ARG1 u, ARG2 u.
  comp_not+so : ARG0 e, ARG1 u, ARG2 u.
  comp_not+too : ARG0 e, ARG1 u, ARG2 u.
  comp_so : ARG0 e, ARG1 u, ARG2 u.
  comp_too : ARG0 e, ARG1 u, ARG2 u.
  compound : ARG0 e, ARG1 u, ARG2 i.
  compound : ARG0 i, ARG1 u, ARG2 i { IND + }.
  compound : ARG0 i, ARG1 u, ARG2 x { NUM sg, IND + }.
  compound : ARG0 e, ARG1 x { GEND n, NUM sg, IND - }, ARG2 u.
  compound : ARG0 e, ARG1 x { NUM sg, IND - }, ARG2 i.
  compound : ARG0 i, ARG1 x { IND + }, ARG2 u.
  compound : ARG0 i, ARG1 u, ARG2 x { NUM pl, IND + }.
  cop_id : ARG0 i, ARG1 u, ARG2 u.
  def_explicit_q : ARG0 i, RSTR h, BODY h.
  def_explicit_q : ARG0 x { NUM sg }, RSTR h, BODY h.
  def_implicit_q : ARG0 i, RSTR h, BODY h.
  def_implicit_q : ARG0 i { NUM sg }, RSTR h, BODY h.
  discourse : ARG0 i, L-HNDL h, L-INDEX i, R-HNDL h, R-INDEX i.
  dofm : ARG0 x { GEND n, NUM sg, IND + }.
  dofm : ARG0 x { GEND n, NUM sg, IND - }.
  dofm : ARG0 x { IND + }.
  dofw : ARG0 x { IND + }.
  ellipsis : ARG0 e, ARG1 u.
  ellipsis_expl : ARG0 e, ARG1 u.
  ellipsis_ref : ARG0 e, ARG1 u.
  elliptical_n : ARG0 i.
  eventuality : ARG0 e, ARG1 h.
  every_q : ARG0 x { NUM sg }, RSTR h, BODY h.
  excl : ARG0 i.
  few+if+any_a : ARG0 e, ARG1 p.
  focus_d : ARG0 e, ARG1 e, ARG2 u.
  fraction : ARG0 i, ARG1 i.
  free_relative_ever_q : ARG0 i, RSTR h, BODY h.
  free_relative_ever_q : ARG0 i { NUM sg }, RSTR h, BODY h.
  free_relative_q : ARG0 i, RSTR h, BODY h.
  free_relative_q : ARG0 i { NUM sg }, RSTR h, BODY h.
  fw_seq : ARG0 i { NUM sg }, L-INDEX i, R-INDEX i.
  fw_seq : ARG0 i, L-INDEX i, R-INDEX i.
  generic_entity : ARG0 i.
  generic_entity : ARG0 x { NUM pl }.
  generic_entity : ARG0 x { NUM pl, IND + }, [ ARG1 i ].
  generic_entity : ARG0 x { GEND n, NUM sg }.
  generic_nom : ARG0 x { IND + }.
  generic_v : ARG0 e, ARG1 i, ARG2 p.
  generic_verb : ARG0 e, [ ARG1 h ].
  greet : ARG0 i.
  holiday : ARG0 x { NUM sg, IND - }.
  hour_prep : ARG0 i, ARG1 x { NUM sg }, ARG2 i.
  id : ARG0 i, ARG1 u, ARG2 i.
  id : ARG0 e, ARG1 x { NUM pl }, ARG2 u.
  id : ARG0 e, ARG1 x { NUM sg }, ARG2 u.
  idiom_q_i : ARG0 i, RSTR h, BODY h.
  implicit_conj : ARG0 i, [ L-HNDL u ], L-INDEX i, [ R-HNDL h ], R-INDEX i.
  interval : ARG0 i, [ ARG1 u ].
  interval_p_end : ARG0 i, ARG1 i, ARG2 u.
  interval_p_start : ARG0 e, ARG1 i, ARG2 u.
  little-few_a : ARG0 e, ARG1 p.
  little-few_a : ARG0 i, ARG1 i.
  loc_nonsp : ARG0 i, ARG1 u, ARG2 u.
  loc_nonsp : ARG0 e, ARG1 u, ARG2 i { NUM sg }.
  manner : ARG0 i.
  manner : ARG0 i { NUM sg }.
  meas_np : ARG0 x.
  measure : ARG0 e, ARG1 u, ARG2 i.
  minute : ARG0 i { NUM sg }.
  mofy : ARG0 x { IND + }.
  mofy : ARG0 i.
  much-many_a : ARG0 i, ARG1 p.
  much-many_a : ARG0 i, ARG1 i.
  much-many_a : ARG0 e, ARG1 i { NUM sg }.
  named : ARG0 x { IND + }.
  named : ARG0 x { NUM sg, IND + }.
  named : ARG0 x { NUM pl, IND + }.
  named : ARG0 x { GEND m, IND + }.
  named : ARG0 x { GEND f, IND + }.
  named_n : ARG0 x { IND + }.
  named_n : ARG0 x.
  named_n : ARG0 x { NUM pl, IND + }.
  ne_x : ARG0 e, ARG1 h, ARG2 h.
  neg : ARG0 i, [ ARG1 h ].
  nominalization : ARG0 x { GEND n, NUM sg }, ARG1 h.
  nominalization : ARG0 x { NUM sg }, ARG1 h.
  nominalization : ARG0 x, ARG1 h.
  nontemp_loc_nonsp : ARG0 i, ARG1 u, ARG2 u.
  nontemp_loc_nonsp : ARG0 e, ARG1 u, ARG2 i { NUM sg }.
  not_x_deg : ARG0 e, ARG1 u.
  num_seq : ARG0 x { NUM sg }, L-INDEX x, R-INDEX x.
  number_q : ARG0 x, RSTR h, BODY h.
  numbered_hour : ARG0 i { NUM sg }, ARG1 u, ARG2 u.
  of_p : ARG0 i, ARG1 u, ARG2 i.
  ord : ARG0 i, ARG1 i.
  parenthetical : ARG0 i, ARG1 i, ARG2 i.
  parenthetical : ARG0 i, ARG1 i, ARG2 h.
  parg_d : ARG0 e, ARG1 e, ARG2 u.
  parg_d : ARG0 e, ARG1 e, ARG2 i { NUM sg }.
  part_of : ARG0 i, ARG1 i.
  part_of : ARG0 i { NUM pl }, ARG1 i.
  person : ARG0 x { NUM sg }.
  person : ARG0 i.
  place_n : ARG0 i { NUM sg }.
  place_n : ARG0 i.
  plus : ARG0 i, ARG1 u, ARG2 h, ARG3 h.
  polite : ARG0 i, ARG1 u.
  poss : ARG0 e, ARG1 u, ARG2 u.
  poss : ARG0 e, ARG1 i, ARG2 x { GEND f, NUM sg }.
  poss : ARG0 e, ARG1 i, ARG2 i { NUM pl }.
  poss : ARG0 e, ARG1 i, ARG2 x { GEND n, NUM sg }.
  poss : ARG0 e, ARG1 i, ARG2 i { NUM sg }.
  poss : ARG0 e, ARG1 i, ARG2 x { GEND m, NUM sg }.
  poss : ARG0 e, ARG1 i, ARG2 x { GEND m-or-f, NUM sg }.
  prednom_state : ARG0 e, ARG1 i.
  pron : ARG0 x.
  pron : ARG0 x { NUM pl }.
  pron : ARG0 x { GEND m, NUM sg }.
  pron : ARG0 x { GEND f, NUM sg }.
  pron : ARG0 x { NUM sg }.
  pron : ARG0 x { GEND n, NUM sg }.
  pron : ARG0 x { GEND m-or-f, NUM sg }.
  pronoun_q : ARG0 x, RSTR h, BODY h.
  pronoun_q : ARG0 i { NUM pl }, RSTR h, BODY h.
  pronoun_q : ARG0 x { GEND m, NUM sg }, RSTR h, BODY h.
  pronoun_q : ARG0 x { GEND f, NUM sg }, RSTR h, BODY h.
  pronoun_q : ARG0 x { NUM sg }, RSTR h, BODY h.
  pronoun_q : ARG0 x { GEND n, NUM sg }, RSTR h, BODY h.
  pronoun_q : ARG0 x { GEND m-or-f, NUM sg }, RSTR h, BODY h.
  proper_q : ARG0 x, RSTR h, BODY h.
  property : ARG0 i.
  prpstn_to_prop : ARG0 e, ARG1 h, ARG2 i.
  reason : ARG0 i.
  recip_pro : ARG0 i { NUM pl }.
  recip_pro : ARG0 x.
  refl_mod : ARG0 e, ARG1 e, ARG2 x { NUM sg }.
  refl_mod : ARG0 e, ARG1 e, ARG2 x { NUM pl }.
  refl_mod : ARG0 e, ARG1 e, ARG2 x { GEND n, NUM sg }.
  refl_mod : ARG0 e, ARG1 e, ARG2 x { GEND m-or-f, NUM sg }.
  refl_mod : ARG0 e, ARG1 e, ARG2 x { GEND m, NUM sg }.
  refl_mod : ARG0 e, ARG1 e, ARG2 x { GEND f, NUM sg }.
  relative_mod : ARG0 i, ARG1 u, ARG2 h.
  season : ARG0 x { IND + }.
  season : ARG0 x { NUM sg, IND - }, [ ARG1 i ].
  some_q : ARG0 i, RSTR h, BODY h.
  string : ARG0 e { PROG + }, ARG1 i, ARG2 p.
  string : ARG0 x.
  string : ARG0 x { NUM pl }.
  string : ARG0 e, ARG1 u, [ ARG2 p ].
  string : ARG0 e { TENSE past }, ARG1 i, ARG2 p.
  string : ARG0 e { PERF + }, ARG1 i, ARG2 p.
  string : ARG0 x { IND + }.
  subord : ARG0 e, ARG1 h, ARG2 h.
  superl : [ ARG0 i ], [ ARG1 u ].
  temp : ARG0 i { NUM sg }.
  temp : ARG0 i.
  temp_loc_nonsp : ARG0 i, ARG1 u, ARG2 u.
  temp_loc_nonsp : ARG0 e, ARG1 u, ARG2 i { NUM sg }.
  temp_loc_x : ARG0 i, ARG1 u, ARG2 u.
  temp_loc_x : ARG0 e, ARG1 u, ARG2 i { NUM sg }.
  thing : ARG0 x { NUM sg }.
  thing : ARG0 i.
  time_n : ARG0 i.
  time_n : ARG0 x { NUM sg }.
  times : ARG0 i, ARG1 u, ARG2 h, ARG3 h.
  timezone_p : ARG0 e, ARG1 i.
  udef_q : ARG0 i, RSTR h, BODY h.
  udef_q : ARG0 i { IND + }, RSTR h, BODY h.
  udef_q : ARG0 x { NUM sg }, RSTR h, BODY h.
  udef_q : ARG0 x { NUM sg, IND + }, RSTR h, BODY h.
  udef_q : ARG0 i { NUM pl }, RSTR h, BODY h.
  udef_q : ARG0 x { NUM pl, IND + }, RSTR h, BODY h.
  unknown : ARG0 e, ARG u.
  unspec_adj : ARG0 i, ARG1 i.
  unspec_manner : ARG0 e, ARG1 u, ARG2 i.
  unspec_manner : ARG0 e, ARG1 u, ARG2 i { NUM sg }.
  v_event : ARG0 e.
  which_q : ARG0 i, RSTR h, BODY h.
  which_q : ARG0 x { NUM sg }, RSTR h, BODY h.
  with_p : ARG0 e, ARG1 u, ARG2 x.
  year_range : ARG0 x { NUM pl }.
  yofc : ARG0 x { NUM sg, IND + }.
